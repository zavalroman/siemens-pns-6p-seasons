FUNCTION "MICROMASTER_4XX" : VOID
TITLE =
//Функция приема/передачи данных преобразователя частоты Микромастер.
AUTHOR : CHANt
FAMILY : OTS
NAME : MM_4XX
VERSION : 0.1


VAR_INPUT
  I_Adress : WORD ;	//Адрес частотника для приема данных
  O_Adress : WORD ;	//Адрес частотника для передачи данных
  Num_DB : BLOCK_DB ;	//Номер блока данных
  I_Enable : BOOL ;	//Включить насос
  I_Error_Reset : BOOL ;	//Квитировать аварию
  I_Setpoint : REAL ;	//Уставка частотнику
  I_PE : REAL ;	//Значение датчика давления на выходе коллектора насосной группы
  I_ASU_UPRAVLENIE : BOOL ;	//Управление от контроллера (AG)
  I_CURR_NOM : REAL ;	//Номинальный ток двигателя
  I_PRESS_HLIM : REAL ;	//Верхний  предел датчика давления
END_VAR
VAR_OUTPUT
  O_Freq : REAL ;	//Текущая частота двигателя
  O_Curr : REAL ;	//Текущий ток двигателя
  O_Power_DC : BOOL ;	//Есть напряжение на частотнике
  O_GOTOV_K_VKL : BOOL ;	//Готов к включению
  O_V_RABOTE : BOOL ;	//Работа
  O_ALARM : BOOL ;	//Неисправность активна
  O_BLOK_ACTUAL : BOOL ;	//Блокировка включения активна
  O_WARNING_ACTUAL : BOOL ;	//Предупреждение активно
  O_ASU_WORK : BOOL ;	//Управление AG (PZD-управление)
  O_Rel : BOOL ;	//Есть связь с частотником
END_VAR
VAR_TEMP
  Error_SFC14 : INT ;	//Код ошибки приема
  Error_SFC15 : INT ;	//Код ошибки передачи
  Error_Recive : BOOL ;	
  Error_Send : BOOL ;	
END_VAR
BEGIN
NETWORK
TITLE =
//Запрос данных от частотника
      OPN   #Num_DB; //открыть #Num_DB -  текущий блок данных частотника
      CALL "DPRD_DAT" (//вызвать функцию четния параметров частотника
           LADDR                    := #I_Adress,// загрузить адрес частотника в сети профибас
           RET_VAL                  := #Error_SFC14,// результат функции приема данных
           RECORD                   := P#DBX 0.0 BYTE 8);//записать полученные данные по указателю в текущий блок данных 
      NOP   0; 
NETWORK
TITLE =
//Обработка текущей частоты двигателя
      L     DBW    2; // загрузить значение частоты из слова DBW2
      ITD   ; // преобразовать в двойное целое
      DTR   ; //преобразовать в плавающую точку
      L     1.638400e+004; //загрузить диапазон НЕХ=4000 (DEC=16384)
      /R    ; //поделить
      L     5.000000e+001; // загрузить значение шкалы 50 Гц
      *R    ; //перемножить
      T     #O_Freq; //записать в выход функции  #O_Freq 
NETWORK
TITLE =
//Обработка текущего тока двигателя
//65536.0
      L     DBW    4; // загрузить значение тока из слова DBW4
      ITD   ; // преобразовать в двойное целое
      DTR   ; //преобразовать в плавающую точку
      L     8.192000e+003; //загрузить диапазон НЕХ=2000 (DEC=8192)
      /R    ; //поделить
      L     #I_CURR_NOM; // загрузить значение шкалы  из входа  #I_CURR_NOM  
      *R    ; //перемножить
      T     #O_Curr; //записать в выход функции  #O_Curr    
NETWORK
TITLE =
//Обработка напряжения во внутреннем контуре частотника
//Уточнить при пусковых провалах
      L     DBW    6; // загрузить значение напряжения во внутреннем контуре частотника из слова DBW6
      L     7000; // загрузить значение шкалы диапазон НЕХ=7000 (Уточнить при пусковых провалах)
      >I    ; //сравнить
      =     #O_Power_DC; // если значение DBW6 то установить признак наличия напряжения   #O_Power_DC  
NETWORK
TITLE =
//Обработка ошибки связи
      L     #Error_SFC14; //загрузить возвращаемое значение функции SFC14
      L     0; //загрузить 0
      ==I   ; // если значения равны
      =     #Error_Recive; //то, установить признак - есть связь с частотником  выход 
NETWORK
TITLE =
//Обработка битов состояния частотника
      A     DBX    1.0; //если есть
      =     #O_GOTOV_K_VKL; //то, установить признак "Готов к включению"
      NOP   0; 
      A     DBX    1.2; //если есть
      =     #O_V_RABOTE; //то, установить признак "Привод в работе"
      NOP   0; 
      A     DBX    1.3; //если есть
      =     #O_ALARM; //то, установить признак "Неисправность активна"
      NOP   0; 
      A     DBX    1.6; //если есть
      =     #O_BLOK_ACTUAL; //то, установить признак "Блокировка активна"
      NOP   0; 
      A     DBX    1.7; //если есть
      =     #O_WARNING_ACTUAL; //то, установить признак "Предупреждение активно"
      NOP   0; 
      A     DBX    0.1; //если есть
      =     #O_ASU_WORK; //то, установить признак "Работаю от контроллера"
      NOP   0; 
NETWORK
TITLE =
//Обработка команд на частотник
      A     #I_Enable; //если есть  "Пуск частотника"
      =     DBX    9.0; //то, установить DBX    9.0 
      NOP   0; 
      A     #I_Error_Reset; //если есть  "Квитировать неисправность"
      =     DBX    9.7; //то, установить DBX 9.7     
      NOP   0; 
      A     #I_ASU_UPRAVLENIE; //если есть  "Управление от контроллера"
      =     DBX    8.2; //то, установить DBX 8.2 
      =     DBX    9.1; //установлены биты слова управления для корректной работы ПЧ
      =     DBX    9.2; //назначение битов есть в соответствующем Data Block
      =     DBX    9.3; 
      =     DBX    9.4; 
      =     DBX    9.5; 
      =     DBX    9.6; 
      NOP   0; 
NETWORK
TITLE =
//Обработка данных для уставки на частотник
//    RND                               //выделить целое число 
      L     #I_Setpoint; //загрузить уставку в формате плавающей точки
      L     #I_PRESS_HLIM; //загрузить верхний предел значения давления датчика
      /R    ; //поделить значения
      L     1.638400e+004; //загрузить диапазон НЕХ=4000 (DEC=16384)
      *R    ; //перемножить         
      TRUNC ; //выделить целое число 
      T     DBW   10; //загрузить в слово DBW10 для передачи в частотник
NETWORK
TITLE =
//Обработка датчика давления насосной группы.
      L     #I_PE; 
      L     #I_PRESS_HLIM; 
      /R    ; //поделить значения
      L     1.638400e+004; //загрузить диапазон НЕХ=4000 (DEC=16384)
      *R    ; //перемножить         
      TRUNC ; //выделить целое число 
      T     DBW   12; //загрузить в слово DBW12 для передачи в частотник
NETWORK
TITLE =
//Передача данных на частотник

      CALL "DPWR_DAT" (//вызвать функцию передачи данных в частотник
           LADDR                    := #O_Adress,//загрузить адрес передачи
           RECORD                   := P#DBX 8.0 BYTE 8,//по указателю считать и передать данные на частотник
           RET_VAL                  := #Error_SFC15);//возвращаемый результат работы функции   SFC15

NETWORK
TITLE =
//Обратка статуса передачи данных на частотник  
//
//
      L     #Error_SFC15; //загрузить возвращаемое значение функции SFC15
      L     0; //загрузить 0
      ==I   ; // если значения равны
      =     #Error_Send; //то, установить признак - есть связь с частотником 
NETWORK
TITLE =

      O     #Error_Recive; 
      O     #Error_Send; 
      =     #O_Rel; //есть связь с частотником
END_FUNCTION

